<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>CS-Notes</title>
      <link>https://notes.yxy.ninja</link>
      <description>Last 10 notes on CS-Notes</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Integer Encoding</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/Integer-Encoding</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/Integer-Encoding</guid>
    <description>Abstract § There are 3 Variants, computer use the 2’s Complement (补码) variant to store integer Below is a 4-bits Integer Encoding under the 3 Variants 3 Variants § Sign-and-Magnitude (原码) § 1’s Complement (反码) § 2’s Complement (补码) § Terminologies § Sign Bit § The first bit from left 0 denotes positive 1 denotes negative Magnitude § All the bits in the encoding except Sign Bit .</description>
    <pubDate>Fri, 08 Dec 2023 14:00:36 GMT</pubDate>
  </item><item>
    <title>Sign-and-Magnitude (原码)</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/Sign-and-Magnitude-(%E5%8E%9F%E7%A0%81)</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/Sign-and-Magnitude-(%E5%8E%9F%E7%A0%81)</guid>
    <description>Abstract § Represent positive and negative decimal integers in binary Divide the number of bits into 2 parts, one part for negative number, another part for positive number Cons § Require extra Logic Gates § The Adder logic cant be used for subtraction This can be avoided using 1’s Complement (反码) or 2’s Complement (补码) Reference § Sign-and-Magnitude Addition and Subtraction Hello-Algo .</description>
    <pubDate>Fri, 08 Dec 2023 14:00:28 GMT</pubDate>
  </item><item>
    <title>2&#039;s Complement (补码)</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/2's-Complement-(%E8%A1%A5%E7%A0%81)</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/2's-Complement-(%E8%A1%A5%E7%A0%81)</guid>
    <description>Abstract § We are adding extra 1 to the 1’s Complement (反码), positive number remain unchanged This makes sure that there is only one 0 by adding 1 to after converting from Sign-and-Magnitude (原码) to 1’s Complement (反码) After computation, take the value Sign Bit (negative if it is 1) and perform addition with value of whole Magnitude (all are positive) This is the form that computers use to store integers References § 2’s Complement Addition and Subtraction .</description>
    <pubDate>Fri, 08 Dec 2023 13:52:41 GMT</pubDate>
  </item><item>
    <title>1&#039;s Complement (反码)</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/1's-Complement-(%E5%8F%8D%E7%A0%81)</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/1's-Complement-(%E5%8F%8D%E7%A0%81)</guid>
    <description>Abstract § For negative number, all bits are inverted except the Sign Bit which is 1 when we need to perform the computation For positive number, all bits remind the same After the computation, we invert all bits except Sign Bit to obtain the final answer.</description>
    <pubDate>Fri, 08 Dec 2023 13:33:51 GMT</pubDate>
  </item><item>
    <title>Mathematical Statement</title>
    <link>https://notes.yxy.ninja/Math/Discrete-Math/Mathematical-Statement</link>
    <guid>https://notes.yxy.ninja/Math/Discrete-Math/Mathematical-Statement</guid>
    <description>Abstract § Also known as Proposition 3 important types are Universal, Conditional &amp; Existential We can form statements that are Universal &amp; Conditional, or more to form complex statements Either True or False Warning Doesn’t depend on any Variable, unless it is Logical Equivalence equation Not in a question form Different Types of Statements § Universal § Made of Symbol, Variable &amp; Quantifiers ∀x∈D,Q(x) true iff Q(x) is true for every x in D false iff Q(x) is false for at least one x in D For simple ones, usually universal comes wiht Conditional Statement Existential § Made of Symbol, Variable &amp; Quantifiers ∃x∈D,Q(x) true iff Q(x) is true for at least one x in D false iff Q(x) is false for all x in D For simple ones, usually existential comes with Conjunction Negation of Universal § Logical Equivalence to Existential There is AT LEAST ONE that IS NOT ¬(∀x∈D,Q(x))≡∃x∈D,¬Q(x) Negation of Existential § Logical Equivalence to Universal ALL ARE NOT ¬(∃x∈D,Q(x))≡∀x∈D,¬Q(x) Negation of Universal Conditional § Make use of Negation of Universal &amp; Implication Law Universal Conditional § Made of Symbol, Variable &amp; Quantifiers &amp; Conditional Statement ∀x(ifP(x)→Q(x)) Can be simplified to Universal ∀x∈P,Q(x) Conditional § Conditional Statement If…, then… Terminologies § Statement § A sentence that is True or False, but not both Can be presented with variables like p, q, r &amp; s etc Logical Connectives § Negation: NOT performed first Disjunction: OR ,Conjunction: AND coequal, make sure proper parentheses is used to avoid Ambiguous If-then/implies: performed last, coequal with iff Statement/Propositional Form § Make up with Statement variables &amp; Logical Connectives Compound Statement § Make up with Statement variables &amp; Logical Connectives When the statement has Conditional Statement, convert it using Implication Law to make it much less confusing Tautology t § Statement/Propositional Form that is always true Contradiction c § Statement/Propositional Form that is always false Implicitly Quantified § The Quantifiers are assumed without specified explicitly Vacuous Truth of Universal § Given the statement: All balls in the bowl are blue, however no balls in the bowl.</description>
    <pubDate>Fri, 08 Dec 2023 12:55:20 GMT</pubDate>
  </item><item>
    <title>Predicate</title>
    <link>https://notes.yxy.ninja/Math/Discrete-Math/Predicate</link>
    <guid>https://notes.yxy.ninja/Math/Discrete-Math/Predicate</guid>
    <description>Abstract § Also known as Propositional Functions &amp; Open Sentences Truth value depends on Variable Becomes a Mathematical Statement when specific values are substituted for Variable Returns either true or false, thus cant be used as a Variable Made of Symbol &amp; finite number of Variable Example: let P stand for is a student at NUS, then P(x) = x is a student at NUS, where x is the Variable, P is the Symbol Terminologies § Variable § Symbol § Quantifiers § Instead of manually assign a specific value to Variable to obtain a Mathematical Statement Quantifiers is another way, specific how many of a particular type of values that make the predicate true ∀ ∃ Order of Quantifiers § Unless the Quantifiers are of the same type.</description>
    <pubDate>Fri, 08 Dec 2023 12:51:42 GMT</pubDate>
  </item><item>
    <title>Double Pointers</title>
    <link>https://notes.yxy.ninja/DSA/Algorithms/Double-Pointers/Double-Pointers</link>
    <guid>https://notes.yxy.ninja/DSA/Algorithms/Double-Pointers/Double-Pointers</guid>
    <description>#dsa 3 types Double Pointers(Fast, Slow) Double Pointers (Left, Right) Double Pointers (Sliding Window) Mainly used to solve Array, String &amp; Linked List related problems Reduce time complexity by one dimension, O(n^2) to O(n) for example Example Use Cases .</description>
    <pubDate>Fri, 08 Dec 2023 11:05:17 GMT</pubDate>
  </item><item>
    <title>Greedy Algorithm</title>
    <link>https://notes.yxy.ninja/DSA/Algorithms/Greedy-Algorithm</link>
    <guid>https://notes.yxy.ninja/DSA/Algorithms/Greedy-Algorithm</guid>
    <description>Abstract § Note 向日葵朝着太阳转动， 时刻都在寻求当前汲取最大养分的可能。 最优子结构就是追随太阳最高效的移动轨迹。 移除重复子问题让向日葵紧跟太阳的脚步。 贪心策略在一轮轮的简单选择中，逐步导向最佳的答案。 Used to solve Optimisation Problem Usually better performance than Backtracking &amp; Dynamic Programming Think about what is the Local Optimal Solution.</description>
    <pubDate>Fri, 08 Dec 2023 02:44:34 GMT</pubDate>
  </item><item>
    <title>Datadog RUM</title>
    <link>https://notes.yxy.ninja/Tools/Datadog/Datadog-RUM</link>
    <guid>https://notes.yxy.ninja/Tools/Datadog/Datadog-RUM</guid>
    <description>Abstract § With RUM, we are able to get the metadata about the client such as the user-agent, IP Address &amp; record down the user actions on the page in a video format Setup § The example below is based on next.</description>
    <pubDate>Thu, 07 Dec 2023 10:43:11 GMT</pubDate>
  </item><item>
    <title>My DSA Weak Points</title>
    <link>https://notes.yxy.ninja/DSA/My-DSA-Weak-Points</link>
    <guid>https://notes.yxy.ninja/DSA/My-DSA-Weak-Points</guid>
    <description>Abstract § Weak points to be strengthen Areas to improve § Dynamic Programming § Create custom data structure § Examples are like Sort Zero Number Theory § Examples are like New Skateboard Visualisation/Implementation § Examples are like - 1766C - Hamiltonian Wall Coding Practices § Java § Always scanner.</description>
    <pubDate>Thu, 07 Dec 2023 09:36:08 GMT</pubDate>
  </item>
    </channel>
  </rss>