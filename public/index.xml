<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>CS-Notes</title>
      <link>https://notes.yxy.ninja</link>
      <description>Last 10 notes on CS-Notes</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Read-After-Write(RAW) Hazard</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Pipelining/Read-After-Write(RAW)-Hazard/Read-After-Write(RAW)-Hazard</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Pipelining/Read-After-Write(RAW)-Hazard/Read-After-Write(RAW)-Hazard</guid>
    <description>Abstract § x is only ready at t=5 since there’s where the first Instruction finishes Can be countered with simple Pipeline Stall or more complex Operand Forwarding .</description>
    <pubDate>Tue, 05 Dec 2023 17:52:21 GMT</pubDate>
  </item><item>
    <title>Rule of Inference (推理规则)</title>
    <link>https://notes.yxy.ninja/Math/Discrete-Math/Rule-of-Inference-(%E6%8E%A8%E7%90%86%E8%A7%84%E5%88%99)</link>
    <guid>https://notes.yxy.ninja/Math/Discrete-Math/Rule-of-Inference-(%E6%8E%A8%E7%90%86%E8%A7%84%E5%88%99)</guid>
    <description>Abstract § Logical rule that allows us to derive a Conclusion from a set of Premise A form of Mathematical Argument that is Valid Examples rules are Modus Ponens, Modus Tollens Tools that enable Deductive Reasoning (演繹推理) Terminologies § Modus Ponens § Modus Tollens § Denying the consequent Generalization § Case 1 § Premise: p Conclusion: p v q Case 2 § Premise: q Conclusion: p v q Specilisation § Allow us to discard some information to focus on things that we are interested Case 1 § Premise: p AND q Conclusion: p Case 2 § Premise: p AND q Conclusion: q Elimination § Case 1 § Premise: p v q, ~q Conclusion: p Case 2 § Premise: p v q, ~p Conclusion: q Transitivity § Premise: p -&gt; q, q -&gt; r Conclusion: p -&gt; r Division into Cases § Premise: p v q, p -&gt; r, q -&gt; r Conclusion: r The above only 2 cases, we can have more than 2 cases Contradiction Rule § Premise: ~p -&gt; false Conclusion: p The core of Proof by Contradiction (反证法) If a assumption leads to a contradiction, then that assumption must be false .</description>
    <pubDate>Tue, 05 Dec 2023 17:41:31 GMT</pubDate>
  </item><item>
    <title>General Template</title>
    <link>https://notes.yxy.ninja/Templates/General-Template</link>
    <guid>https://notes.yxy.ninja/Templates/General-Template</guid>
    <description>Abstract §.</description>
    <pubDate>Tue, 05 Dec 2023 17:37:58 GMT</pubDate>
  </item><item>
    <title>Fallacy</title>
    <link>https://notes.yxy.ninja/Math/Discrete-Math/Terminologies/Fallacy</link>
    <guid>https://notes.yxy.ninja/Math/Discrete-Math/Terminologies/Fallacy</guid>
    <description>Abstract § Error in reasoning that results in an invalid Mathematical Argument 3 common fallacies causes Using Ambiguous Premises Circular Reasoning (Assuming what is to be proved without having derived it from the Premise) Jumping to a Conclusion Common errors are Converse Error(Going against Modus Tollens) &amp; Inverse Error (Going against Vacuously True) Terminologies §.</description>
    <pubDate>Tue, 05 Dec 2023 17:36:45 GMT</pubDate>
  </item><item>
    <title>Deductive Reasoning (演繹推理)</title>
    <link>https://notes.yxy.ninja/Math/Discrete-Math/Deductive-Reasoning-(%E6%BC%94%E7%B9%B9%E6%8E%A8%E7%90%86)</link>
    <guid>https://notes.yxy.ninja/Math/Discrete-Math/Deductive-Reasoning-(%E6%BC%94%E7%B9%B9%E6%8E%A8%E7%90%86)</guid>
    <description>Abstract § Terminologies § Universal Instantiation § If some property is true of everything in the set, then it is true of any particular thing in the set Core tool for deductive reasoning .</description>
    <pubDate>Tue, 05 Dec 2023 17:30:26 GMT</pubDate>
  </item><item>
    <title>2&#039;s Complement</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/2's-Complement</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/2's-Complement</guid>
    <description>Abstract § We are adding extra 1 to the 反码 to obtain 补码 This makes sure that there is only one 0 by adding 1 to after converting from Sign-and-Magnitude to 1’s Complement .</description>
    <pubDate>Tue, 05 Dec 2023 10:09:15 GMT</pubDate>
  </item><item>
    <title>1&#039;s Complement</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/1's-Complement</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/1's-Complement</guid>
    <description>Abstract § For negative number, all bits are inverted except the sign bit which is 1 when we need to perform the computation We can use this in addition computation directly, without building extra logic circuit We will have +0 &amp; -0, can be solved by 2’s Complement .</description>
    <pubDate>Tue, 05 Dec 2023 10:06:49 GMT</pubDate>
  </item><item>
    <title>Decimal to Binary</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/Decimal-to-Binary</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Number-System/Binary-Encoding/Decimal-to-Binary</guid>
    <description>Abstract § Number before decimal point Keep diving by 2 until we get 0 Then the binary form counts from bottom to top Number after decimal point Keep multiple by 2 until we get 1 or infinite loop Then the binary form counts from top to bottom .</description>
    <pubDate>Tue, 05 Dec 2023 10:01:52 GMT</pubDate>
  </item><item>
    <title>Pipeline</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Pipelining/Pipeline</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Pipelining/Pipeline</guid>
    <description>Abstract § Reduce idle time when executing the Pipeline Stages by using Instruction-Level Parallelism Terminologies § Width § The Instruction-Level Parallelism capabilities - how many Instruction can be run in parallel in the same time References § CPU Pipelining - The cool way your CPU avoids idle time! .</description>
    <pubDate>Tue, 05 Dec 2023 09:55:25 GMT</pubDate>
  </item><item>
    <title>Instruction Set Architecture (ISA)</title>
    <link>https://notes.yxy.ninja/Computer-Organisation/Instruction-Set-Architecture-(ISA)/Instruction-Set-Architecture-(ISA)</link>
    <guid>https://notes.yxy.ninja/Computer-Organisation/Instruction-Set-Architecture-(ISA)/Instruction-Set-Architecture-(ISA)</guid>
    <description>#computer_organisation Abstract § A set of instructions which contains Instruction &amp; parameters Aka the language the CPU speaks Benefit § Implementation of CPU is decoupled.</description>
    <pubDate>Tue, 05 Dec 2023 09:54:57 GMT</pubDate>
  </item>
    </channel>
  </rss>